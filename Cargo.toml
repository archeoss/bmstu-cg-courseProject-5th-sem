[package]
name = "bmstu_cg_courseProject_5th_sem"
version = "0.2.0"
authors = ["Simeon Romanov <archeosAnacritis@gmail.com>"]
edition = "2021"
license = "GPL-3.0"
repository = "https://github.com/archeoss/bmstu-cg-courseProject-5th-sem"
description = "Course project for BMSTU, CG course"
keywords = ["egui", "3D", "CG", "z-buffer", "Solid of revolution"]
categories = ["CG", "BMSTU"]
# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
crate-type = ["cdylib", "rlib"]

[[bench]]
name = "bench"
harness = false

[dev-dependencies]
criterion = "0.3"

[dependencies]
rfd = "0.10.0"
chrono = { version = "0.4", features = ["js-sys", "wasmbind"] }
eframe = { version = "0.20.0", default-features = false }
egui = { version = "0.20.0", features = [
  "extra_debug_asserts",
] }
paste = "*"
# bytemuck = { version = "1.7.1", optional = true }
egui_extras = { version = "0.20.0"  }
nalgebra = "*"
# feature "persistence":
serde = { version = "1", optional = true, features = ["derive"] }


ehttp = { version = "0.2.0", optional = true }
image = { version = "0.24", optional = true, default-features = false, features = [
  "jpeg",
  "png",
] }
poll-promise = { version = "0.2", optional = true, default-features = false }

[features]
default = ["glow", "persistence"]

http = ["ehttp", "image", "poll-promise", "egui_extras/image"]
persistence = ["eframe/persistence", "egui/persistence", "serde"]
# screen_reader = ["eframe/screen_reader"]                          # experimental
serde = ["dep:serde", "egui/serde"]

glow = ["eframe/glow"]
wgpu = ["eframe/wgpu"]#, "bytemuck"]

[profile.release]
# Optimize for size
strip = true    # Strip symbols from binary; Turn off for cargo bloat command
# opt-level = "s"
lto = true    # Link Time optimization, causes a bit longer compilation
codegen-units = 1   # Maximize size reduction optimization, causes longer compilation
# Optimize for speed
opt-level = 3 


[profile.bench]
strip = true    # Strip symbols from binary; Turn off for cargo bloat command
# opt-level = "s"
lto = true    # Link Time optimization, causes a bit longer compilation
codegen-units = 1   # Maximize size reduction optimization, causes longer compilation
# Optimize for speed
opt-level = 3 

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tracing-subscriber = "0.3"


[target.'cfg(target_arch = "wasm32")'.dependencies]

console_error_panic_hook = "0.1.6"
tracing-wasm = "0.2"
wasm-bindgen-futures = "0.4"
