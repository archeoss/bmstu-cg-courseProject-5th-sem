import { Button, VerticalBox, LineEdit, StandardButton } from "std-widgets.slint";
//import { MenuBar } from "components.slint";

export AppWindow := Window {
    title: "Course Project";
    property<int> wdth: 1000;
    property<int> hght: 800;
    width: wdth * 1px;
    height: hght * 1px;

    property <int> counter: 0;
    icon: @image-url("./icons/bmstu.png");
    property canvas <=> picture.source;
    callback request-increase-value();
    callback request-increase-valuee();

    callback move-model();
    callback scale-model();
    callback rotate-model();
    callback draw-frame-model();
    HorizontalLayout {

        padding: 0; spacing: 0;
        //MenuBar {}
        Rectangle
        {
            callback draw-line();
                background: blue;
                property<int> active: 0;
                max-width: 250px;
                max-height: 200px;
                VerticalLayout {
                    padding-left: 0px;
                    padding-top: 35px;
                    padding-right: 0px;
                    padding-bottom: 12px;
                    spacing: 8px;
                    VerticalLayout {
                        // Margin hint for MenuBarTopLabel::Graphic
                        padding-left: 50px;
                        padding-top: 0px;
                        padding-right: 50px;
                        padding-bottom: 54px;

                        Image {
                            source: @image-url("icons/bmstu.png");
                            height: source.height * 1px;
                        }
                    }
                    //###  In the original, the icon is derived from the name
                    //for entry[idx] in [
                    //    { name: "Canvas", icon: @image-url("icons/github.png") },
                    //    { name: "Rooms", icon: @image-url("images/telegram.png") },
                   //     { name: "Devices", icon: @image-url("images/devices.png") },
                   //     { name: "Statistics", icon: @image-url("images/statistics.png") },
                   //     { name: "Storage", icon: @image-url("images/storage.png") },
                   //     { name: "Members", icon: @image-url("images/members.png") },
                    //] : MenuItem {
                    //    name: entry.name;
                    //    icon: entry.icon;
                    //    active: root.active == idx;
                    //}
                    Rectangle {
                    property <image> icon <=> i.source;
                        property<string> name <=> t.text;
                        property<bool> active;
                        property<bool> pressed;
                        callback draw-line();

                        background: active ? rgba(100%, 100%, 100%, 14%) : ma.has-hover ? rgba(100%, 100%, 100%, 9%) : transparent;
                        popup := PopupWindow {
                            v := VerticalLayout {
                                    //Rectangle { height:100%; width: 100%; background: yellow; }
                                    //x: 20px; y: 20px; height: 150px; width: 150px;
                                    //StandardButton { kind: ok; }
                                    //StandardButton { kind: cancel; }
                                    draw := Button {
                                        text: "Draw Frame Model";
                                        clicked => {
                                                    root.draw-frame-model();
                                                    //t.text = "clicked";
                                                    }

                                    }
                                    Button {
                                        text: "Move Model";
                                        clicked => {
                                                    root.move-model();
                                                    //t.text = "clicked2";
                                                    }
                                    }
                                    Button {
                                        text: "Rotate Model";
                                        clicked => {
                                                    root.rotate-model();
                                                    //t.text = "clicked2";
                                                    }
                                    }
                                    Button {
                                        text: "Scale Model";
                                        clicked => {
                                                    root.scale-model();
                                                    //t.text = "clicked2";
                                                    }
                                    }
                                }
                            }
                        ma := TouchArea {
                            clicked => {popup.show();}
                        }
                        HorizontalLayout {
                            alignment: start;
                            spacing: 6px;
                            padding: 8px;
                            padding-left: 30px;
                            padding-right: 30px;
                            i := Image {
                                source: @image-url("icons/github.png");
                                width: 14px; // Skin.cpp sets 14 pixels for MenuBarGraphicLabel::Graphic
                                height: 14px;
                            }
                            t := Text {
                                text: "Canvas";
                                color: white;
                                font-size: 10px;
                            }
                        }
                    }
                    Rectangle {}
                    //MenuItem { name: "Logout"; icon: @image-url("images/logout.png"); }
                }
        }
        Rectangle
        {
            //x: 0px;
            //y: 0px;
            width: wdth * 1px - 250px;
            height: hght * 1px;
            border-width: 3px;
            border-color: black;
            border-radius: 10px;


            VerticalLayout
            {
                padding: 0; spacing: 0;
                HorizontalLayout {

                    picture := Image {
                        //source: draw-line(counter);
                        //width: 650px;
                        //height: 700px;
                    }
                }
            }
        }
    }
}